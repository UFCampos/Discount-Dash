{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/redux-thunk/es/index.js"],"sourcesContent":["/** A function that accepts a potential \"extra argument\" value to be injected later,\r\n * and returns an instance of the thunk middleware that uses that value\r\n */\nfunction createThunkMiddleware(extraArgument) {\n  // Standard Redux middleware definition pattern:\n  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware\n  var middleware = function middleware(_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        // The thunk middleware looks for any functions that were passed to `store.dispatch`.\n        // If this \"action\" is really a function, call it and return the result.\n        if (typeof action === 'function') {\n          // Inject the store's `dispatch` and `getState` methods, as well as any \"extra arg\"\n          return action(dispatch, getState, extraArgument);\n        } // Otherwise, pass the action down the middleware chain as usual\n\n\n        return next(action);\n      };\n    };\n  };\n\n  return middleware;\n}\n\nvar thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version\n// with whatever \"extra arg\" they want to inject into their thunks\n\nthunk.withExtraArgument = createThunkMiddleware;\nexport default thunk;"],"names":[],"mappings":"AAAA;;CAEC;;;AACD,SAAS,sBAAsB,aAAa;IAC1C,gDAAgD;IAChD,0FAA0F;IAC1F,IAAI,aAAa,SAAS,WAAW,IAAI;QACvC,IAAI,WAAW,KAAK,QAAQ,EACxB,WAAW,KAAK,QAAQ;QAC5B,OAAO,SAAU,IAAI;YACnB,OAAO,SAAU,MAAM;gBACrB,qFAAqF;gBACrF,wEAAwE;gBACxE,IAAI,OAAO,WAAW,YAAY;oBAChC,mFAAmF;oBACnF,OAAO,OAAO,UAAU,UAAU;gBACpC,EAAE,gEAAgE;gBAGlE,OAAO,KAAK;YACd;QACF;IACF;IAEA,OAAO;AACT;AAEA,IAAI,QAAQ,yBAAyB,uEAAuE;AAC5G,kEAAkE;AAElE,MAAM,iBAAiB,GAAG;uCACX"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}