{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/redux/service/productsAPI.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\ntype Product={\r\n  name:string,\r\n  price:string,\r\n  normalPrice:string,\r\n  description:string,\r\n  expiration:string,\r\n  image:string,\r\n  stock:string,\r\n  category:string,\r\n  brand:string,\r\n}\r\nexport const productsApi = createApi({\r\n  reducerPath: 'productsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: `/api/products`,\r\n  }),\r\n  endpoints: (build) => ({\r\n    getResults: build.query<Product[], { name: string }>({\r\n      query: ({ name }) => `?name=${name}`\r\n    }),\r\n    getProduct: build.query<Product, { id: string }>({\r\n      query: ({ id }) => `/${id}`,\r\n    }),\r\n    newPost: build.mutation({\r\n      query: (body) => ({\r\n        url: '/postProduct',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useNewPostMutation, useGetResultsQuery, useGetProductQuery } = productsApi;\r\n"],"names":[],"mappings":";;;;;;;;;AAYO,MAAM,cAAc,wLAAU;IACnC,aAAa;IACb,WAAW,6LAAe;QACxB,SAAS,CAAC,aAAa,CAAC;IAC1B;IACA,WAAW,CAAC,QAAU,CAAC;YACrB,YAAY,MAAM,KAAK,CAA8B;gBACnD,OAAO;wBAAC,EAAE,IAAI,EAAE;2BAAK,CAAC,MAAM,EAAE,KAAK,CAAC;gBAAD;YACrC;YACA,YAAY,MAAM,KAAK,CAA0B;gBAC/C,OAAO;wBAAC,EAAE,EAAE,EAAE;2BAAK,CAAC,CAAC,EAAE,GAAG,CAAC;gBAAD;YAC5B;YACA,SAAS,MAAM,QAAQ,CAAC;gBACtB,OAAO,CAAC,OAAS,CAAC;wBAChB,KAAK;wBACL,QAAQ;wBACR;oBACF,CAAC;YACH;QACF,CAAC;AACH;AAEO,MAAM,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,GAAG"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}