{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/redux/features/cartItemsSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { ReduxState } from \"../hooks\";\r\nimport { CartProduct } from \"@/utils/types\";\r\n\r\ntype CartItems = {\r\n    cartItems: CartProduct[]\r\n    cartItemsId: { [productId: string]: number }\r\n}\r\n\r\nconst initialState: CartItems = {\r\n    cartItems: [],\r\n    cartItemsId: {},\r\n}\r\n\r\nexport const cartItemsSlice = createSlice({\r\n    name: \"cartItems\",\r\n    initialState,\r\n    reducers: {\r\n        addCart: (state, { payload }) => {\r\n            let hasItem = state.cartItems.find((item) => item.id === payload.id);\r\n            if (hasItem) {\r\n                hasItem.quantity = (hasItem.quantity || 0) + 1;\r\n            } else {\r\n                payload = {\r\n                    ...payload,\r\n                    quantity: 1,\r\n                };\r\n                console.log(payload);\r\n                state.cartItems.push(payload);\r\n            }\r\n        },\r\n        addTotalCart: (state, { payload }) => {\r\n            state.cartItems = payload\r\n        }\r\n    },\r\n})\r\n\r\nexport const { addCart, addTotalCart } = cartItemsSlice.actions;"],"names":[],"mappings":";;;;;;;;AASA,MAAM,eAA0B;IAC5B,WAAW,EAAE;IACb,aAAa,CAAC;AAClB;AAEO,MAAM,iBAAiB,mKAAY;IACtC,MAAM;IACN;IACA,UAAU;QACN,SAAS,CAAC;gBAAO,EAAE,OAAO,EAAE;YACxB,IAAI,UAAU,MAAM,SAAS,CAAC,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK,QAAQ,EAAE;YACnE,IAAI,SAAS;gBACT,QAAQ,QAAQ,GAAG,CAAC,QAAQ,QAAQ,IAAI,CAAC,IAAI;YACjD,OAAO;gBACH,UAAU;oBACN,GAAG,OAAO;oBACV,UAAU;gBACd;gBACA,QAAQ,GAAG,CAAC;gBACZ,MAAM,SAAS,CAAC,IAAI,CAAC;YACzB;QACJ;QACA,cAAc,CAAC;gBAAO,EAAE,OAAO,EAAE;YAC7B,MAAM,SAAS,GAAG;QACtB;IACJ;AACJ;AAEO,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,eAAe,OAAO"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}