{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/redux/service/searchProfileAPI.ts"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\n\r\nexport const searchProfileAPI = createApi({\r\n    reducerPath: \"searchProfileAPI\",\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `/api`\r\n    }),\r\n    endpoints: (builder) => ({\r\n        getProfile: builder.query<any, {id : Number}>({\r\n            query: ({id}) => `/users/${id}`\r\n        })\r\n    })\r\n})\r\n\r\nexport const { useGetProfileQuery } = searchProfileAPI"],"names":[],"mappings":";;;;;;;AAGO,MAAM,mBAAmB,wLAAU;IACtC,aAAa;IACb,WAAW,6LAAe;QACtB,SAAS,CAAC,IAAI,CAAC;IACnB;IACA,WAAW,CAAC,UAAY,CAAC;YACrB,YAAY,QAAQ,KAAK,CAAqB;gBAC1C,OAAO;wBAAC,EAAC,EAAE,EAAC;2BAAK,CAAC,OAAO,EAAE,GAAG,CAAC;gBAAD;YAClC;QACJ,CAAC;AACL;AAEO,MAAM,EAAE,kBAAkB,EAAE,GAAG"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/redux/features/menuSlice.ts"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\n\r\nexport const menuSlice = createSlice({\r\n    name: \"menu\",\r\n    initialState: {\r\n        isOpen: false,\r\n    },\r\n    reducers: {\r\n        toggleMenu: (state) => {\r\n            state.isOpen = !state.isOpen\r\n        },\r\n    },\r\n})\r\n\r\nexport const {toggleMenu} = menuSlice.actions"],"names":[],"mappings":";;;;;;;AAEO,MAAM,YAAY,mKAAY;IACjC,MAAM;IACN,cAAc;QACV,QAAQ;IACZ;IACA,UAAU;QACN,YAAY,CAAC;YACT,MAAM,MAAM,GAAG,CAAC,MAAM,MAAM;QAChC;IACJ;AACJ;AAEO,MAAM,EAAC,UAAU,EAAC,GAAG,UAAU,OAAO"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/redux/service/searchBarAPI.ts"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nexport const searchBarAPI = createApi({\r\n    reducerPath: 'searchBarAPI',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: `/api/products`,\r\n    }),\r\n    endpoints: (builder) => ({\r\n        getResults : builder.query<any, {name : string}>({\r\n            query: ({name}) => `?name=${name}`\r\n        })\r\n    })\r\n})\r\n\r\nexport const {useGetResultsQuery} = searchBarAPI\r\n\r\n"],"names":[],"mappings":";;;;;;;AAEO,MAAM,eAAe,wLAAU;IAClC,aAAa;IACb,WAAW,6LAAe;QACtB,SAAS,CAAC,aAAa,CAAC;IAC5B;IACA,WAAW,CAAC,UAAY,CAAC;YACrB,YAAa,QAAQ,KAAK,CAAuB;gBAC7C,OAAO;wBAAC,EAAC,IAAI,EAAC;2BAAK,CAAC,MAAM,EAAE,KAAK,CAAC;gBAAD;YACrC;QACJ,CAAC;AACL;AAEO,MAAM,EAAC,kBAAkB,EAAC,GAAG"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/redux/features/itemsSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const itemsSlice = createSlice({\r\n    name: \"items\",\r\n    initialState: {\r\n        products: [],\r\n        errorsItems: false,\r\n        isLoadItems: false,\r\n    },\r\n    reducers: {\r\n        loadProducts: (state, {payload}) =>\r\n         {\r\n            state.products = payload\r\n        },\r\n        loadErrors: (state, {payload}) =>\r\n        {\r\n            state.errorsItems = payload\r\n        },\r\n        isLoadingItems: (state, {payload}) =>\r\n        {\r\n            state.isLoadItems = payload\r\n        }\r\n    },\r\n})\r\n\r\nexport const { loadProducts, loadErrors, isLoadingItems, refreshProducts} = itemsSlice.actions\r\n"],"names":[],"mappings":";;;;;;;;;;AAEO,MAAM,aAAa,mKAAY;IAClC,MAAM;IACN,cAAc;QACV,UAAU,EAAE;QACZ,aAAa;QACb,aAAa;IACjB;IACA,UAAU;QACN,cAAc,CAAC;gBAAO,EAAC,OAAO,EAAC;YAE3B,MAAM,QAAQ,GAAG;QACrB;QACA,YAAY,CAAC;gBAAO,EAAC,OAAO,EAAC;YAEzB,MAAM,WAAW,GAAG;QACxB;QACA,gBAAgB,CAAC;gBAAO,EAAC,OAAO,EAAC;YAE7B,MAAM,WAAW,GAAG;QACxB;IACJ;AACJ;AAEO,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,cAAc,EAAE,eAAe,EAAC,GAAG,WAAW,OAAO"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/redux/store.ts"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { itemsSlice } from \"../redux/features/itemsSlice\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport { menuSlice } from \"./features/menuSlice\";\r\nimport { searchProfileAPI } from \"./service/searchProfileAPI\";\r\nimport { userProfileSlice } from \"./features/userProfile\";\r\nimport { cartProductsAPI } from \"./service/cartProductsAPI\";\r\nimport { addProductCartSlice } from \"./features/addProductCartSlice\";\r\nimport { productsApi } from './service/productsAPI'\r\nimport { searchProfileAPI } from './service/searchProfileAPI'\r\nimport {userApi} from './service/usersRegisterAPI'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        items : itemsSlice.reducer,\r\n        menu : menuSlice.reducer,\r\n        userProfile: userProfileSlice.reducer,\r\n        addProductCart: addProductCartSlice.reducer,\r\n        [productsApi.reducerPath] : productsApi.reducer,\r\n        [searchProfileAPI.reducerPath] : searchProfileAPI.reducer,\r\n        [userApi.reducerPath]:userApi.reducer,\r\n        [cartProductsAPI.reducerPath]: cartProductsAPI.reducer,\r\n        [searchProfileAPI.reducerPath]: searchProfileAPI.reducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat( productsApi.middleware, userApi.middleware, cartProductsAPI.middleware,),\r\n})\r\n\r\nsetupListeners(store.dispatch);"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAQA,SAAS,WAAW,QAAQ,wBAAuB;AACnD,SAAS,gBAAgB,QAAQ,6BAA4B;AAC7D,SAAQ,OAAO,QAAO,6BAA4B;AAElD,OAAO,MAAM,QAAQ,oIAAe;IAChC,SAAS;QACL,OAAQ,WAAW,OAAO;QAC1B,MAAO,UAAU,OAAO;QACxB,aAAa,4IAAiB,OAAO;QACrC,gBAAgB,4IAAoB,OAAO;QAC3C,CAAC,oIAAY,WAAW,CAAC,EAAG,YAAY,OAAO;QAC/C,CAAC,2KAAiB,WAAW,CAAC,EAAG,iBAAiB,OAAO;QACzD,CAAC,QAAQ,WAAW,CAAC,EAAC,QAAQ,OAAO;QACrC,CAAC,gBAAgB,WAAW,CAAC,EAAE,gBAAgB,OAAO;QACtD,CAAC,iBAAiB,WAAW,CAAC,EAAE,iBAAiB,OAAO;IAC5D;IACA,YAAY,CAAC,uBAAyB,uBAAuB,MAAM,CAAE,YAAY,UAAU,EAAE,QAAQ,UAAU,EAAE,gBAAgB,UAAU;AAC/I,GAAE;AAEF,eAAe,MAAM,QAAQ"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/providers.tsx"],"sourcesContent":["'use client'\r\n\r\n/* Core */\r\nimport { Provider } from 'react-redux'\r\n\r\n/* Instruments */\r\nimport { store } from './redux/store'\r\n\r\nexport const Providers = (props: React.PropsWithChildren) => {\r\n  return <Provider store={store}>{props.children}</Provider>\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;;;;AAQO,MAAM,YAAY,CAAC;IACxB,qBAAO;QAAU,KAAK;kBAAU,MAAM,QAAQ;;;;;;AAChD;KAFa"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}