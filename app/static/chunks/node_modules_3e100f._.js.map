{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/deepmerge/dist/cjs.js"],"sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/color2k/dist/index.exports.import.es.mjs"],"sourcesContent":["/**\n * A simple guard function:\n *\n * ```js\n * Math.min(Math.max(low, value), high)\n * ```\n */\nfunction guard(low, high, value) {\n  return Math.min(Math.max(low, value), high);\n}\n\nclass ColorError extends Error {\n  constructor(color) {\n    super(`Failed to parse color: \"${color}\"`);\n  }\n}\nvar ColorError$1 = ColorError;\n\n/**\n * Parses a color into red, gree, blue, alpha parts\n *\n * @param color the input color. Can be a RGB, RBGA, HSL, HSLA, or named color\n */\nfunction parseToRgba(color) {\n  if (typeof color !== 'string') throw new ColorError$1(color);\n  if (color.trim().toLowerCase() === 'transparent') return [0, 0, 0, 0];\n  let normalizedColor = color.trim();\n  normalizedColor = namedColorRegex.test(color) ? nameToHex(color) : color;\n  const reducedHexMatch = reducedHexRegex.exec(normalizedColor);\n  if (reducedHexMatch) {\n    const arr = Array.from(reducedHexMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(r(x, 2), 16)), parseInt(r(arr[3] || 'f', 2), 16) / 255];\n  }\n  const hexMatch = hexRegex.exec(normalizedColor);\n  if (hexMatch) {\n    const arr = Array.from(hexMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(x, 16)), parseInt(arr[3] || 'ff', 16) / 255];\n  }\n  const rgbaMatch = rgbaRegex.exec(normalizedColor);\n  if (rgbaMatch) {\n    const arr = Array.from(rgbaMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(x, 10)), parseFloat(arr[3] || '1')];\n  }\n  const hslaMatch = hslaRegex.exec(normalizedColor);\n  if (hslaMatch) {\n    const [h, s, l, a] = Array.from(hslaMatch).slice(1).map(parseFloat);\n    if (guard(0, 100, s) !== s) throw new ColorError$1(color);\n    if (guard(0, 100, l) !== l) throw new ColorError$1(color);\n    return [...hslToRgb(h, s, l), Number.isNaN(a) ? 1 : a];\n  }\n  throw new ColorError$1(color);\n}\nfunction hash(str) {\n  let hash = 5381;\n  let i = str.length;\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return (hash >>> 0) % 2341;\n}\nconst colorToInt = x => parseInt(x.replace(/_/g, ''), 36);\nconst compressedColorMap = '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'.split(' ').reduce((acc, next) => {\n  const key = colorToInt(next.substring(0, 3));\n  const hex = colorToInt(next.substring(3)).toString(16);\n\n  // NOTE: padStart could be used here but it breaks Node 6 compat\n  // https://github.com/ricokahler/color2k/issues/351\n  let prefix = '';\n  for (let i = 0; i < 6 - hex.length; i++) {\n    prefix += '0';\n  }\n  acc[key] = `${prefix}${hex}`;\n  return acc;\n}, {});\n\n/**\n * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n */\nfunction nameToHex(color) {\n  const normalizedColorName = color.toLowerCase().trim();\n  const result = compressedColorMap[hash(normalizedColorName)];\n  if (!result) throw new ColorError$1(color);\n  return `#${result}`;\n}\nconst r = (str, amount) => Array.from(Array(amount)).map(() => str).join('');\nconst reducedHexRegex = new RegExp(`^#${r('([a-f0-9])', 3)}([a-f0-9])?$`, 'i');\nconst hexRegex = new RegExp(`^#${r('([a-f0-9]{2})', 3)}([a-f0-9]{2})?$`, 'i');\nconst rgbaRegex = new RegExp(`^rgba?\\\\(\\\\s*(\\\\d+)\\\\s*${r(',\\\\s*(\\\\d+)\\\\s*', 2)}(?:,\\\\s*([\\\\d.]+))?\\\\s*\\\\)$`, 'i');\nconst hslaRegex = /^hsla?\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%(?:\\s*,\\s*([\\d.]+))?\\s*\\)$/i;\nconst namedColorRegex = /^[a-z]+$/i;\nconst roundColor = color => {\n  return Math.round(color * 255);\n};\nconst hslToRgb = (hue, saturation, lightness) => {\n  let l = lightness / 100;\n  if (saturation === 0) {\n    // achromatic\n    return [l, l, l].map(roundColor);\n  }\n\n  // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV\n  const huePrime = (hue % 360 + 360) % 360 / 60;\n  const chroma = (1 - Math.abs(2 * l - 1)) * (saturation / 100);\n  const secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n  let red = 0;\n  let green = 0;\n  let blue = 0;\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n  const lightnessModification = l - chroma / 2;\n  const finalRed = red + lightnessModification;\n  const finalGreen = green + lightnessModification;\n  const finalBlue = blue + lightnessModification;\n  return [finalRed, finalGreen, finalBlue].map(roundColor);\n};\n\n// taken from:\n\n/**\n * Parses a color in hue, saturation, lightness, and the alpha channel.\n *\n * Hue is a number between 0 and 360, saturation, lightness, and alpha are\n * decimal percentages between 0 and 1\n */\nfunction parseToHsla(color) {\n  const [red, green, blue, alpha] = parseToRgba(color).map((value, index) =>\n  // 3rd index is alpha channel which is already normalized\n  index === 3 ? value : value / 255);\n  const max = Math.max(red, green, blue);\n  const min = Math.min(red, green, blue);\n  const lightness = (max + min) / 2;\n\n  // achromatic\n  if (max === min) return [0, 0, lightness, alpha];\n  const delta = max - min;\n  const saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n  const hue = 60 * (red === max ? (green - blue) / delta + (green < blue ? 6 : 0) : green === max ? (blue - red) / delta + 2 : (red - green) / delta + 4);\n  return [hue, saturation, lightness, alpha];\n}\n\n/**\n * Takes in hsla parts and constructs an hsla string\n *\n * @param hue The color circle (from 0 to 360) - 0 (or 360) is red, 120 is green, 240 is blue\n * @param saturation Percentage of saturation, given as a decimal between 0 and 1\n * @param lightness Percentage of lightness, given as a decimal between 0 and 1\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction hsla(hue, saturation, lightness, alpha) {\n  return `hsla(${(hue % 360).toFixed()}, ${guard(0, 100, saturation * 100).toFixed()}%, ${guard(0, 100, lightness * 100).toFixed()}%, ${parseFloat(guard(0, 1, alpha).toFixed(3))})`;\n}\n\n/**\n * Adjusts the current hue of the color by the given degrees. Wraps around when\n * over 360.\n *\n * @param color input color\n * @param degrees degrees to adjust the input color, accepts degree integers\n * (0 - 360) and wraps around on overflow\n */\nfunction adjustHue(color, degrees) {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h + degrees, s, l, a);\n}\n\n/**\n * Darkens using lightness. This is equivalent to subtracting the lightness\n * from the L in HSL.\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction darken(color, amount) {\n  const [hue, saturation, lightness, alpha] = parseToHsla(color);\n  return hsla(hue, saturation, lightness - amount, alpha);\n}\n\n/**\n * Desaturates the input color by the given amount via subtracting from the `s`\n * in `hsla`.\n *\n * @param amount The amount to desaturate, given as a decimal between 0 and 1\n */\nfunction desaturate(color, amount) {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h, s - amount, l, a);\n}\n\n// taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getLuminance.js\n\n/**\n * Returns a number (float) representing the luminance of a color.\n */\nfunction getLuminance(color) {\n  if (color === 'transparent') return 0;\n  function f(x) {\n    const channel = x / 255;\n    return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n  }\n  const [r, g, b] = parseToRgba(color);\n  return 0.2126 * f(r) + 0.7152 * f(g) + 0.0722 * f(b);\n}\n\n// taken from:\n\n/**\n * Returns the contrast ratio between two colors based on\n * [W3's recommended equation for calculating contrast](http://www.w3.org/TR/WCAG20/#contrast-ratiodef).\n */\nfunction getContrast(color1, color2) {\n  const luminance1 = getLuminance(color1);\n  const luminance2 = getLuminance(color2);\n  return luminance1 > luminance2 ? (luminance1 + 0.05) / (luminance2 + 0.05) : (luminance2 + 0.05) / (luminance1 + 0.05);\n}\n\n/**\n * Takes in rgba parts and returns an rgba string\n *\n * @param red The amount of red in the red channel, given in a number between 0 and 255 inclusive\n * @param green The amount of green in the red channel, given in a number between 0 and 255 inclusive\n * @param blue The amount of blue in the red channel, given in a number between 0 and 255 inclusive\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction rgba(red, green, blue, alpha) {\n  return `rgba(${guard(0, 255, red).toFixed()}, ${guard(0, 255, green).toFixed()}, ${guard(0, 255, blue).toFixed()}, ${parseFloat(guard(0, 1, alpha).toFixed(3))})`;\n}\n\n/**\n * Mixes two colors together. Taken from sass's implementation.\n */\nfunction mix(color1, color2, weight) {\n  const normalize = (n, index) =>\n  // 3rd index is alpha channel which is already normalized\n  index === 3 ? n : n / 255;\n  const [r1, g1, b1, a1] = parseToRgba(color1).map(normalize);\n  const [r2, g2, b2, a2] = parseToRgba(color2).map(normalize);\n\n  // The formula is copied from the original Sass implementation:\n  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n  const alphaDelta = a2 - a1;\n  const normalizedWeight = weight * 2 - 1;\n  const combinedWeight = normalizedWeight * alphaDelta === -1 ? normalizedWeight : normalizedWeight + alphaDelta / (1 + normalizedWeight * alphaDelta);\n  const weight2 = (combinedWeight + 1) / 2;\n  const weight1 = 1 - weight2;\n  const r = (r1 * weight1 + r2 * weight2) * 255;\n  const g = (g1 * weight1 + g2 * weight2) * 255;\n  const b = (b1 * weight1 + b2 * weight2) * 255;\n  const a = a2 * weight + a1 * (1 - weight);\n  return rgba(r, g, b, a);\n}\n\n/**\n * Given a series colors, this function will return a `scale(x)` function that\n * accepts a percentage as a decimal between 0 and 1 and returns the color at\n * that percentage in the scale.\n *\n * ```js\n * const scale = getScale('red', 'yellow', 'green');\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(0.5)); // rgba(255, 255, 0, 1)\n * console.log(scale(1)); // rgba(0, 128, 0, 1)\n * ```\n *\n * If you'd like to limit the domain and range like chroma-js, we recommend\n * wrapping scale again.\n *\n * ```js\n * const _scale = getScale('red', 'yellow', 'green');\n * const scale = x => _scale(x / 100);\n *\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(50)); // rgba(255, 255, 0, 1)\n * console.log(scale(100)); // rgba(0, 128, 0, 1)\n * ```\n */\nfunction getScale(...colors) {\n  return n => {\n    const lastIndex = colors.length - 1;\n    const lowIndex = guard(0, lastIndex, Math.floor(n * lastIndex));\n    const highIndex = guard(0, lastIndex, Math.ceil(n * lastIndex));\n    const color1 = colors[lowIndex];\n    const color2 = colors[highIndex];\n    const unit = 1 / lastIndex;\n    const weight = (n - unit * lowIndex) / unit;\n    return mix(color1, color2, weight);\n  };\n}\n\nconst guidelines = {\n  decorative: 1.5,\n  readable: 3,\n  aa: 4.5,\n  aaa: 7\n};\n\n/**\n * Returns whether or not a color has bad contrast against a background\n * according to a given standard.\n */\nfunction hasBadContrast(color, standard = 'aa', background = '#fff') {\n  return getContrast(color, background) < guidelines[standard];\n}\n\n/**\n * Lightens a color by a given amount. This is equivalent to\n * `darken(color, -amount)`\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction lighten(color, amount) {\n  return darken(color, -amount);\n}\n\n/**\n * Takes in a color and makes it more transparent by convert to `rgba` and\n * decreasing the amount in the alpha channel.\n *\n * @param amount The amount to increase the transparency by, given as a decimal between 0 and 1\n */\nfunction transparentize(color, amount) {\n  const [r, g, b, a] = parseToRgba(color);\n  return rgba(r, g, b, a - amount);\n}\n\n/**\n * Takes a color and un-transparentizes it. Equivalent to\n * `transparentize(color, -amount)`\n *\n * @param amount The amount to increase the opacity by, given as a decimal between 0 and 1\n */\nfunction opacify(color, amount) {\n  return transparentize(color, -amount);\n}\n\n/**\n * An alternative function to `readableColor`. Returns whether or not the \n * readable color (i.e. the color to be place on top the input color) should be\n * black.\n */\nfunction readableColorIsBlack(color) {\n  return getLuminance(color) > 0.179;\n}\n\n/**\n * Returns black or white for best contrast depending on the luminosity of the\n * given color.\n */\nfunction readableColor(color) {\n  return readableColorIsBlack(color) ? '#000' : '#fff';\n}\n\n/**\n * Saturates a color by converting it to `hsl` and increasing the saturation\n * amount. Equivalent to `desaturate(color, -amount)`\n * \n * @param color Input color\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction saturate(color, amount) {\n  return desaturate(color, -amount);\n}\n\n/**\n * Takes in any color and returns it as a hex code.\n */\nfunction toHex(color) {\n  const [r, g, b, a] = parseToRgba(color);\n  let hex = x => {\n    const h = guard(0, 255, x).toString(16);\n    // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n    return h.length === 1 ? `0${h}` : h;\n  };\n  return `#${hex(r)}${hex(g)}${hex(b)}${a < 1 ? hex(Math.round(a * 255)) : ''}`;\n}\n\n/**\n * Takes in any color and returns it as an rgba string.\n */\nfunction toRgba(color) {\n  return rgba(...parseToRgba(color));\n}\n\n/**\n * Takes in any color and returns it as an hsla string.\n */\nfunction toHsla(color) {\n  return hsla(...parseToHsla(color));\n}\n\nexport { ColorError$1 as ColorError, adjustHue, darken, desaturate, getContrast, getLuminance, getScale, guard, hasBadContrast, hsla, lighten, mix, opacify, parseToHsla, parseToRgba, readableColor, readableColorIsBlack, rgba, saturate, toHex, toHsla, toRgba, transparentize };\n//# sourceMappingURL=index.exports.import.es.mjs.map\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/compute-scroll-into-view/dist/index.js"],"sourcesContent":["const t=t=>\"object\"==typeof t&&null!=t&&1===t.nodeType,e=(t,e)=>(!e||\"hidden\"!==t)&&(\"visible\"!==t&&\"clip\"!==t),n=(t,n)=>{if(t.clientHeight<t.scrollHeight||t.clientWidth<t.scrollWidth){const o=getComputedStyle(t,null);return e(o.overflowY,n)||e(o.overflowX,n)||(t=>{const e=(t=>{if(!t.ownerDocument||!t.ownerDocument.defaultView)return null;try{return t.ownerDocument.defaultView.frameElement}catch(t){return null}})(t);return!!e&&(e.clientHeight<t.scrollHeight||e.clientWidth<t.scrollWidth)})(t)}return!1},o=(t,e,n,o,i,l,r,d)=>l<t&&r>e||l>t&&r<e?0:l<=t&&d<=n||r>=e&&d>=n?l-t-o:r>e&&d<n||l<t&&d>n?r-e+i:0,i=t=>{const e=t.parentElement;return null==e?t.getRootNode().host||null:e},l=(e,l)=>{var r,d,s,h;if(\"undefined\"==typeof document)return[];const{scrollMode:c,block:f,inline:u,boundary:a,skipOverflowHiddenElements:g}=l,m=\"function\"==typeof a?a:t=>t!==a;if(!t(e))throw new TypeError(\"Invalid target\");const p=document.scrollingElement||document.documentElement,w=[];let W=e;for(;t(W)&&m(W);){if(W=i(W),W===p){w.push(W);break}null!=W&&W===document.body&&n(W)&&!n(document.documentElement)||null!=W&&n(W,g)&&w.push(W)}const H=null!=(d=null==(r=window.visualViewport)?void 0:r.width)?d:innerWidth,b=null!=(h=null==(s=window.visualViewport)?void 0:s.height)?h:innerHeight,{scrollX:v,scrollY:y}=window,{height:E,width:M,top:x,right:I,bottom:C,left:R}=e.getBoundingClientRect();let T=\"start\"===f||\"nearest\"===f?x:\"end\"===f?C:x+E/2,V=\"center\"===u?R+M/2:\"end\"===u?I:R;const k=[];for(let t=0;t<w.length;t++){const e=w[t],{height:n,width:i,top:l,right:r,bottom:d,left:s}=e.getBoundingClientRect();if(\"if-needed\"===c&&x>=0&&R>=0&&C<=b&&I<=H&&x>=l&&C<=d&&R>=s&&I<=r)return k;const h=getComputedStyle(e),a=parseInt(h.borderLeftWidth,10),g=parseInt(h.borderTopWidth,10),m=parseInt(h.borderRightWidth,10),W=parseInt(h.borderBottomWidth,10);let B=0,D=0;const L=\"offsetWidth\"in e?e.offsetWidth-e.clientWidth-a-m:0,S=\"offsetHeight\"in e?e.offsetHeight-e.clientHeight-g-W:0,X=\"offsetWidth\"in e?0===e.offsetWidth?0:i/e.offsetWidth:0,Y=\"offsetHeight\"in e?0===e.offsetHeight?0:n/e.offsetHeight:0;if(p===e)B=\"start\"===f?T:\"end\"===f?T-b:\"nearest\"===f?o(y,y+b,b,g,W,y+T,y+T+E,E):T-b/2,D=\"start\"===u?V:\"center\"===u?V-H/2:\"end\"===u?V-H:o(v,v+H,H,a,m,v+V,v+V+M,M),B=Math.max(0,B+y),D=Math.max(0,D+v);else{B=\"start\"===f?T-l-g:\"end\"===f?T-d+W+S:\"nearest\"===f?o(l,d,n,g,W+S,T,T+E,E):T-(l+n/2)+S/2,D=\"start\"===u?V-s-a:\"center\"===u?V-(s+i/2)+L/2:\"end\"===u?V-r+m+L:o(s,r,i,a,m+L,V,V+M,M);const{scrollLeft:t,scrollTop:h}=e;B=Math.max(0,Math.min(h+B/Y,e.scrollHeight-n/Y+S)),D=Math.max(0,Math.min(t+D/X,e.scrollWidth-i/X+L)),T+=h-B,V+=t-D}k.push({el:e,top:B,left:D})}return k};export{l as compute};//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}