{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}